@Глобально
исключение ИсключениеУтверждения
;

структура Сравнение
    пер Вид: ВидСравнения?
    пер ЛевоеЗначение: неизвестно
    пер ПравоеЗначение: неизвестно
;

@Глобально
метод Что(Значение: неизвестно): Утверждение
    этот.Значение = Значение
    возврат этот
;

@Глобально
метод Равно(Значение: неизвестно): Утверждение
    Сравнить(Значение, метод(Сравнение) ->
        Сравнение.Вид = ВидСравнения.Равно
        ПравоеЗначениеНеопределеноВСтроку(Сравнение)
        возврат этот.Значение == Значение
    ;)
    возврат этот
;

@Глобально
метод НеРавно(Значение: неизвестно): Утверждение
    Сравнить(Значение, метод(Сравнение) ->
        Сравнение.Вид = ВидСравнения.НеРавно
        ПравоеЗначениеНеопределеноВСтроку(Сравнение)
        возврат этот.Значение != Значение
    ;)
    возврат этот
;

@Глобально
метод Больше(Значение: неизвестно): Утверждение
    Сравнить(Значение, метод(Сравнение) ->
        Сравнение.Вид = ВидСравнения.Больше
        возврат этот.Значение > Значение
    ;)
    возврат этот
;

@Глобально
метод БольшеИлиРавно(Значение: неизвестно): Утверждение
    Сравнить(Значение, метод(Сравнение) ->
        Сравнение.Вид = ВидСравнения.БольшеИлиРавно
        возврат этот.Значение >= Значение
    ;)
    возврат этот
;

@Глобально
метод Меньше(Значение: неизвестно): Утверждение
    Сравнить(Значение, метод(Сравнение) ->
        Сравнение.Вид = ВидСравнения.Меньше
        возврат этот.Значение < Значение
    ;)
    возврат этот
;

@Глобально
метод МеньшеИлиРавно(Значение: неизвестно): Утверждение
    Сравнить(Значение, метод(Сравнение) ->
        Сравнение.Вид = ВидСравнения.МеньшеИлиРавно
        возврат этот.Значение <= Значение
    ;)
    возврат этот
;

@Глобально
метод Содержит(Значение: неизвестно): Утверждение
    если ЗначениеОбходимое()
        Сравнить(Значение, метод(Сравнение) ->
            Сравнение.Вид = ВидСравнения.Содержит
            возврат этот.Значение.Содержит(Значение)
        ;)
    ;
    возврат этот
;

@Глобально
метод НеСодержит(Значение: неизвестно): Утверждение
    если ЗначениеОбходимое()
        Сравнить(Значение, метод(Сравнение) ->
            Сравнение.Вид = ВидСравнения.НеСодержит
            возврат не этот.Значение.Содержит(Значение)
        ;)
    ;
    возврат этот
;

@Глобально
метод ЭтоИстина(): Утверждение
    возврат Равно(Истина)
;

@Глобально
метод ЭтоЛожь(): Утверждение
    возврат Равно(Ложь)
;

@Глобально
метод ЭтоНеопределено(): Утверждение
    возврат Равно(Неопределено)
;

@Глобально
метод ЭтоНеНеопределено(): Утверждение
    возврат НеРавно(Неопределено)
;

@Глобально
метод ИмеетТип(Тип: Тип): Утверждение
    Сравнить(Тип, метод(Сравнение) ->
        Сравнение.Вид = ВидСравнения.Равно
        возврат этот.Значение.ПолучитьТип() == Тип
    ;)
    возврат этот
;

метод Сравнить(Значение: неизвестно, МетодСравнения: (Сравнение) -> Булево)
    знч Сравнение = новый Сравнение(ЛевоеЗначение = этот.Значение, ПравоеЗначение = Значение)
    если не МетодСравнения(Сравнение)
        выбросить новый ИсключениеУтверждения(
            [
                "Ожидали, что %{Сравнение.ЛевоеЗначение}",
                "%{Сравнение.Вид.Представление().ВНижнийРегистр()} %{Сравнение.ПравоеЗначение},",
                "но это не так."
            ].Соединить(" ")
        )
    ;
;

метод ЗначениеОбходимое(): Булево
    возврат этот.Значение это Обходимое<неизвестно>
;

метод ПравоеЗначениеНеопределеноВСтроку(Сравнение: Сравнение)
    если Сравнение.ПравоеЗначение == Неопределено
        Сравнение.ПравоеЗначение = "Неопределено"
    ;
;